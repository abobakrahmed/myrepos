In this tutorial, we will explain how to set up a MySQL Master/Slave replication with one master and one slave server on Centos 7
Prerequisites : We create two servers or vms in same network ,we can using private IP if not support public UP.
Master-IP : 10.128.0.2
Slave-IP : 10.128.0.3

- Install MySQL:
Install MySQL on both the Master and Slave servers:
$ sudo yum local install https://dev.mysql.com/get/mysql57-community-release-el7-     11.noarch.rpmsudo 
$ yum install mysql-community-server

When MySQL server starts for the first time, a temporary password is generated for the MySQL root user. To find the password use the following grep command : 
sudo grep 'temporary password' /var/log/mysqld.log

Note : if there’s not showing any password , you must delete /var/lib/mysql and reinstall mysql service.

Run the mysql_secure_installation command to set your new root password and improve the security of the MySQL instance:
Enter the temporary root password and answer Y (yes) to all questions.

Configure Master Server :
To do so open the MySQL configuration file and add the following lines in the [mysqld] section:
$ sudo nano /etc/my.cnf

Add thefollowing lines to my.cnf
bind-address    = 10.128.0.2
server-id       = 1
log_bin         = mysql-bin

Just done , restart MySQL Service
$ Systemctl restart mysqld

Now , create new user replication & login to mysql server by root user
$ mysql -u root –p

From mysql prompt , we create replica user for grant replication slave to this user  
Mysql > CREATE USER 'replica'@'10.128.0.3' IDENTIFIED BY 'strong_password';
Mysql > GRANT REPLICATION SLAVE ON *.* TO 'replica'@'10.128.0.3';

Excute this command from mysql prompt known binary file name and position:
Mysql > show master status\G;

| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+------------------+----------+--------------+------------------+-------------------+
| mysql-bin.000004 |      316

Take note of file name, ‘mysql-bin.000004’ and Position ‘316’. You’ll need these values when configuring the slave server.

Configure Slave Server :
To do so open the MySQL configuration file and add the following lines in the [mysqld] section:
$ sudo nano /etc/my.cnf
Add the following lines to my.cnf
bind-address    = 10.128.0.3
server-id       = 2
log_bin         = mysql-bin

Restart mysql service:
$ Systemctl restart mysqld

Now , configure the parameters slave for connect to master server & login to mysql server by root user
$ mysql -u root –p
Then , stop slave server :
Mysql > stop slave;
Run the following query for configure slave to replicate the master :
Mysql > MASTER_HOST='10.128.0.2',
Mysql > MASTER_USER='replica',
Mysql > MASTER_PASSWORD='strong_password',
Mysql > MASTER_LOG_FILE='mysql-bin.000004',
Mysql > MASTER_LOG_POS=316;

Just Done , Start slave server:
mysql> start slave;

Test Everything:
From master server:
mysql –u root –p
CREATE DATABASE datatest;
Exit;
Login to slave :
Mysql –u root –p
Show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| datatest        |
| sys                |
+--------------------+
5 rows in set (0.00 sec)


Note : sometimes there are invalid MySQL queries which cause the replication to not working after restart servers .
log in to MySQL:
mysql -u root -p			
Run the following from mysql
mysql > SHOW SLAVE STATUS\G	

If one of Slave_IO_Running or Slave_SQL_Running is set to No, then the replication is broken:
*************************** 1. row ***************************
               Slave_IO_State: Waiting for master to send event
                  Master_Host: 10.128.0.2
                  Master_User: replica
                  Master_Port: 3306
                Connect_Retry: 60
              Master_Log_File: mysql-bin.000004
          Read_Master_Log_Pos: 316
               Relay_Log_File: slave-mariadb-relay-bin.000013
                Relay_Log_Pos: 529
        Relay_Master_Log_File: mysql-bin.000004
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes                                             

mysql > stop slave;
mysql > SET GLOBAL SQL_SLAVE_SKIP_COUNTER = 1;
mysql > start slave;
